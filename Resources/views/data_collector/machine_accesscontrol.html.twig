{% import "@Smalldb/data_collector/machine_macros.html.twig" as M %}

<table>
	{{ M.tableColumns() }}
	<thead>
	<tr>
		<th colspan="3" class="key"><big>Access Control Extension</big></th>
	</tr>
	</thead>
	<tbody>
	<tr>
		<th colspan="2" class="key">Default policy name</th>
		<td>{{ dump(accessControl.defaultPolicyName) }}</td>
	</tr>
	</tbody>
</table>

{% for policy in accessControl.policies %}
	<table>
		{{ M.tableColumns() }}
		<thead>
		<tr>
			<th colspan="3" class="key">
				<big>
					Policy:
					<span style="color: {{ styleExt(policy).color | default("inherit") }}">
						{{ policy.name }}
					</span>
				</big>
			</th>
		</tr>
		</thead>
		<tbody>
		<tr>
			<th colspan="2" class="key font-normal">Name</th>
			<td>{{ dump(policy.name) }}</td>
		</tr>
		<tr>
			<th colspan="2" class="key font-normal">
				Predicate
				<span class="help"><abbr title="The access is allowed if the predicate is true.">(?)</abbr></span>
			</th>
			<td>
				{{ _self.predicate(policy.predicate) }}
			</td>
		</tr>
		{{ M.dumpExtensions(policy) }}
		</tbody>
	</table>

{% else %}
	<div class="empty">
		<p>No access control policies specified in the definition.</p>
	</div>
{% endfor %}

{% macro predicate(p) %}
	<b>{{ get_class(p) | abbr_class }}:</b>
	{% for k, v in get_object_vars(p) %}
		{% if k != "predicates" %}
			<span>{{ k }} = <span style="display: inline-block;">{{ dump(v) }}</span>
			</span>{% if not loop.last %},{% endif %}
		{% endif %}
	{% endfor %}
	{% if p.getNestedPredicates is defined %}
		<ul style="margin-left: 2em;">
			{% for pp in p.getNestedPredicates() %}
				<li>{{ _self.predicate(pp) }}</li>
			{% endfor %}
		</ul>
	{% endif %}
{% endmacro %}

