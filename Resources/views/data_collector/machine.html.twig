{% import "@Smalldb/data_collector/machine_macros.html.twig" as M %}

<form action="" method="get">
	<h2>
		{% set curType = machineType %}
		Smalldb State Machine:
		<input type="hidden" name="panel" value="{{ panel }}">
		<input type="hidden" name="page" value="machine">
		<label>
			<select name="machine" onchange="this.form.submit()" class="card" style="margin: 0;">
				{% for type in machineTypes -%}
					<option{{ type == curType ? " selected" }} value="{{ type }}"
						class="font-normal">{{ type }}</option>
				{%- endfor %}
			</select>
			<input type="submit" value="Â»" id="heading-hidden-submit">
			<script type="text/javascript">
				document.getElementById('heading-hidden-submit').style.display = 'none';
			</script>
		</label>
	</h2>
</form>

{#
<div class="metrics">

	<div class="metric">
		<span class="value">{{definition.states | length}}</span>
		<span class="label">States</span>
	</div>

	<div class="metric">
		<span class="value">{{definition.transitions | length}}</span>
		<span class="label">Transitions</span>
	</div>

	<div class="metric">
		<span class="value">{{definition.properties | length}}</span>
		<span class="label">Properties</span>
	</div>

	<div class="metric">
		<span class="value {{ definition.errors is empty ? "text-muted" : "text-danger"}}">
			{{definition.errors | length}}
		</span>
		<span class="label">Errors</span>
	</div>

	<div class="metric">
		<span class="value" style="font-size: 14px; height: 51px">
				{{ mtime | date('Y-m-d')}}<br>
				{{ mtime | date('H:i:s') }}
		</span>
		<span class="label">Last modified</span>
	</div>
</div>
#}

<div class="sf-tabs">
	<div class="tab">
		<h3 class="tab-title">State Machine</h3>

		<div class="tab-content">
			{{ M.machine(definition, stateChart) }}
		</div>
	</div>

	{% if sourceFiles is not null %}
	<div class="tab">
		<h3 class="tab-title">Sources <span class="badge">{{ sourceFiles | length }}</span></h3>
		<div class="tab-content">
			{{ M.sources(sourceFiles, sourceDiagrams) }}
		</div>
	</div>
	{% endif %}

	<div class="tab">
		<h3 class="tab-title">States <span class="badge">{{ definition.states | length }}</span></h3>
		<div class="tab-content">
			{{ M.states(definition.states) }}
		</div>
	</div>

	<div class="tab">
		<h3 class="tab-title">Actions <span class="badge">{{ definition.actions | length }}</span></h3>
		<div class="tab-content">
			{{ M.actions(definition.actions) }}
		</div>
	</div>

	<div class="tab">
		<h3 class="tab-title">Transitions <span class="badge">{{ definition.transitions | length }}</span></h3>
		<div class="tab-content">
			{{ M.transitions(definition.transitions) }}
		</div>
	</div>

	<div class="tab">
		<h3 class="tab-title">Properties <span class="badge">{{ definition.properties | length }}</span></h3>
		<div class="tab-content">
			{{ M.properties(definition.properties) }}
		</div>
	</div>

	{% if accessControl is not null %}
		<div class="tab">
			<h3 class="tab-title">Access Control <span class="badge">{{ accessControl.policies | length }}</span></h3>
			<div class="tab-content">
				{{ M.accessControl(accessControl) }}
			</div>
		</div>
	{% endif %}

	<div class="tab">
		{% set errorCount = definition.errors | length %}
		<h3 class="tab-title">
			Errors
			<span class="badge{% if errorCount > 0 %} status-error{% endif %}">
				{{ errorCount }}
			</span>
		</h3>
		<div class="tab-content">
			{% if definition.errors is empty %}
				<div class="empty">
					<p>No errors found in the state machine definition.</p>
				</div>
			{% else %}
				<ul>
					{{ M.dumpErrors(definition.errors, true) }}
				</ul>
			{% endif %}
		</div>
	</div>

	<div class="tab">
		<h3 class="tab-title">Raw Dump</h3>
		<div class="tab-content">
			<div class="card">
				{{ dump(definition) }}
			</div>
		</div>
	</div>
</div>

{% if not definitionsSnapshot %}
	<p class="help">Note: State machine definition is loaded from the current Smalldb configuration, which may
		differ from the configuration used when profiling this request.</p>
{% endif %}


{# FIXME: Link to JS file rather than inline it. #}
<!-- <script type="text/javascript" src="{{ path('_profiler', { panel: 'smalldb', token: token, page: 'grafovatko' }) }}"></script> -->
<script type="text/javascript">
	//<![CDATA[
	{{ grafovatko_js|raw }}
	//]]>
</script>
<script type="text/javascript">
	if (G) {
		console.log('Grafovatko %s.', G.version);
		const graphElements = document.getElementsByClassName('grafovatko');
		window.grafovatkoView = [];
		for (const el of graphElements) {
			window.grafovatkoView.push(new G.GraphView(el));
		}
	} else {
		console.error("Grafovatko library is not loaded.");
	}
</script>

